/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VaultRouter, VaultRouterInterface } from "../VaultRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "manager_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x2fd5ea69",
        type: "bytes32",
      },
    ],
    name: "c_0x2fd5ea69",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103d73803806103d783398181016040528101906100329190610224565b6100647fafbf009c1b4740854723d73ec3804e2e07b57be5eb61d5419b8322c49adabb7160001b6101f760201b60201c565b6100967f6bbfe5ac413f362557f764907eeb618bea10360bb4cedccd3eec8d8533e8e11b60001b6101f760201b60201c565b6100c87fa04e252344371d7eb62f79598cef85aa4d1545f31ca2e7b55e312dcc0d98b02960001b6101f760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061013b7fdbe5ae8d330c84af2041b4ddce093bc97a846aca2fcf56257dcf58cb8184987560001b6101f760201b60201c565b61016d7fb97a6f097e70d333c04275fe112b200e818d3706247d01880a65d5ac1b3beee860001b6101f760201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff16637ff79e0f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101b357600080fd5b505afa1580156101c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101eb9190610251565b600081905550506102ed565b50565b600081519050610209816102bf565b92915050565b60008151905061021e816102d6565b92915050565b60006020828403121561023a576102396102ba565b5b6000610248848285016101fa565b91505092915050565b600060208284031215610267576102666102ba565b5b60006102758482850161020f565b91505092915050565b60006102898261029a565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6102c88161027e565b81146102d357600080fd5b50565b6102df81610290565b81146102ea57600080fd5b50565b60dc806102fb6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063bddf256214602d575b600080fd5b60436004803603810190603f9190605b565b6045565b005b50565b6000813590506055816092565b92915050565b600060208284031215606e57606d608d565b5b6000607a848285016048565b91505092915050565b6000819050919050565b600080fd5b6099816083565b811460a357600080fd5b5056fea2646970667358221220703136c40061a611a51539110be36d524791231e81da478daa9054d0f95560c664736f6c63430008070033";

export class VaultRouter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    manager_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VaultRouter> {
    return super.deploy(manager_, overrides || {}) as Promise<VaultRouter>;
  }
  getDeployTransaction(
    manager_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(manager_, overrides || {});
  }
  attach(address: string): VaultRouter {
    return super.attach(address) as VaultRouter;
  }
  connect(signer: Signer): VaultRouter__factory {
    return super.connect(signer) as VaultRouter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultRouterInterface {
    return new utils.Interface(_abi) as VaultRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultRouter {
    return new Contract(address, _abi, signerOrProvider) as VaultRouter;
  }
}
