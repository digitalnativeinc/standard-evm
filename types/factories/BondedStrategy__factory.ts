/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BondedStrategy,
  BondedStrategyInterface,
} from "../BondedStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "stnd_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DividendClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "bond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bonded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stnd",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "unbond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "supply_",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "auto_",
        type: "bool",
      },
    ],
    name: "updateSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c22380380610c2283398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610b8f806100936000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806396735aa01161005057806396735aa0146100b25780639940686e146100fc578063f19e2a211461010f57600080fd5b80631e83409a1461007757806327de9e321461008c5780637173caba1461009f575b600080fd5b61008a6100853660046109b6565b61013d565b005b61008a61009a366004610a10565b6105dc565b61008a6100ad366004610a42565b610727565b6001546100d29073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61008a61010a366004610a10565b61085b565b61012f61011d3660046109b6565b60046020526000908152604090205481565b6040519081526020016100f3565b3360009081526020819052604090205462278d009061015c9042610b02565b10156101ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f4d6f6e746847756172643a2041206d6f6e746820686173206e6f74207061737360448201527f65642066726f6d20746865206c6173742072657175657374000000000000000060648201526084015b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561025757600080fd5b505afa15801561026b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028f9190610a29565b61031b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f466565506f6f6c3a2053544e4420686173206e6f74206265656e20706c61636560448201527f642079657400000000000000000000000000000000000000000000000000000060648201526084016101e6565b600154604080517f18160ddd000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff16916318160ddd916004808301926020929190829003018186803b15801561038657600080fd5b505afa15801561039a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103be9190610a29565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8416906370a082319060240160206040518083038186803b15801561042357600080fd5b505afa158015610437573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045b9190610a29565b336000908152600460205260409020546104759190610ac5565b61047f9190610a8a565b90506040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810182905273ffffffffffffffffffffffffffffffffffffffff83169063a9059cbb90604401602060405180830381600087803b1580156104ef57600080fd5b505af1158015610503573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052791906109f3565b61058d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f466565506f6f6c3a20666565207472616e73666572206661696c65640000000060448201526064016101e6565b60408051338152602081018390527f5efa67896a23b651b741b525caacba039c00ca7853be3de8eb1f4269e8669c56910160405180910390a15050336000908152602081905260409020429055565b33600090815260046020526040902054811115610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f466565506f6f6c3a204e6f7420656e6f75676820626f6e6465642053544e440060448201526064016101e6565b6001546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810183905273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb90604401602060405180830381600087803b1580156106c757600080fd5b505af11580156106db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ff91906109f3565b50336000908152600460205260408120805483929061071f908490610b02565b909155505050565b60035473ffffffffffffffffffffffffffffffffffffffff1633146107a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f466565506f6f6c3a2041636365737320496e76616c696400000000000000000060448201526064016101e6565b801561085557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561081657600080fd5b505afa15801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084e9190610a29565b6002555050565b50600255565b6001546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810183905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd90606401602060405180830381600087803b1580156108d357600080fd5b505af11580156108e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090b91906109f3565b610997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f466565506f6f6c3a204e6f7420656e6f75676820616c6c6f77616e636520746f60448201527f206d6f7665207769746820676976656e20616d6f756e7400000000000000000060648201526084016101e6565b336000908152600460205260408120805483929061071f908490610a72565b6000602082840312156109c857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146109ec57600080fd5b9392505050565b600060208284031215610a0557600080fd5b81516109ec81610b48565b600060208284031215610a2257600080fd5b5035919050565b600060208284031215610a3b57600080fd5b5051919050565b60008060408385031215610a5557600080fd5b823591506020830135610a6781610b48565b809150509250929050565b60008219821115610a8557610a85610b19565b500190565b600082610ac0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610afd57610afd610b19565b500290565b600082821015610b1457610b14610b19565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8015158114610b5657600080fd5b5056fea264697066735822122087851d28eee2f31bc69efb97c5d354487c8514d03eb91ae244f80404fe6362a364736f6c63430008070033";

export class BondedStrategy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    stnd_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BondedStrategy> {
    return super.deploy(stnd_, overrides || {}) as Promise<BondedStrategy>;
  }
  getDeployTransaction(
    stnd_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(stnd_, overrides || {});
  }
  attach(address: string): BondedStrategy {
    return super.attach(address) as BondedStrategy;
  }
  connect(signer: Signer): BondedStrategy__factory {
    return super.connect(signer) as BondedStrategy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BondedStrategyInterface {
    return new utils.Interface(_abi) as BondedStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BondedStrategy {
    return new Contract(address, _abi, signerOrProvider) as BondedStrategy;
  }
}
