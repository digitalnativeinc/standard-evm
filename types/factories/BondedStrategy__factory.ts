/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BondedStrategy,
  BondedStrategyInterface,
} from "../BondedStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "stnd_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DividendClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "bond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bonded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "last",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastBonded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stnd",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "unbond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "supply_",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "auto_",
        type: "bool",
      },
    ],
    name: "updateSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e4c380380610e4c83398101604081905261002f91610054565b600280546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610db9806100936000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806396735aa011610076578063a284ceea1161005b578063a284ceea14610184578063dace2df6146101a4578063f19e2a21146101cc57600080fd5b806396735aa01461012c5780639940686e1461017157600080fd5b80631e83409a146100a857806327de9e32146100bd57806370a08231146100d05780637173caba14610119575b600080fd5b6100bb6100b6366004610bc8565b6101ec565b005b6100bb6100cb366004610c3a565b6106f2565b6101066100de366004610bc8565b73ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205490565b6040519081526020015b60405180910390f35b6100bb610127366004610c6c565b610910565b60025461014c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610110565b6100bb61017f366004610c3a565b610a44565b610106610192366004610bc8565b60016020526000908152604090205481565b6101066101b2366004610bea565b600060208181529281526040808220909352908152205481565b6101066101da366004610bc8565b60056020526000908152604090205481565b3360009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902054819062278d009061022c9042610d2c565b10156102bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f4d6f6e746847756172643a2041206d6f6e746820686173206e6f74207061737360448201527f65642066726f6d20746865206c6173742072657175657374000000000000000060648201526084015b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561032757600080fd5b505afa15801561033b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035f9190610c53565b6103eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f426f6e64656453747261746567793a2053544e4420686173206e6f742062656560448201527f6e20706c6163656420796574000000000000000000000000000000000000000060648201526084016102b6565b600254604080517f18160ddd000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff16916318160ddd916004808301926020929190829003018186803b15801561045657600080fd5b505afa15801561046a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048e9190610c53565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516906370a082319060240160206040518083038186803b1580156104f357600080fd5b505afa158015610507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052b9190610c53565b336000908152600560205260409020546105459190610cef565b61054f9190610cb4565b90506040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810182905273ffffffffffffffffffffffffffffffffffffffff84169063a9059cbb90604401602060405180830381600087803b1580156105bf57600080fd5b505af11580156105d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f79190610c1d565b610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f426f6e64656453747261746567793a20666565207472616e736665722066616960448201527f6c6564000000000000000000000000000000000000000000000000000000000060648201526084016102b6565b60408051338152602081018390527f5efa67896a23b651b741b525caacba039c00ca7853be3de8eb1f4269e8669c56910160405180910390a1503360009081526020818152604080832073ffffffffffffffffffffffffffffffffffffffff9490941683529290522042905550565b3360009081526001602052604090205462278d00906107119042610d2c565b101561079f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f426f6e64656447756172643a2041206d6f6e746820686173206e6f742070617360448201527f7365642066726f6d20746865206c61737420626f6e646564207478000000000060648201526084016102b6565b3360009081526005602052604090205481111561083e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f426f6e64656453747261746567793a204e6f7420656e6f75676820626f6e646560448201527f642053544e44000000000000000000000000000000000000000000000000000060648201526084016102b6565b6002546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810183905273ffffffffffffffffffffffffffffffffffffffff9091169063a9059cbb90604401602060405180830381600087803b1580156108b057600080fd5b505af11580156108c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e89190610c1d565b503360009081526005602052604081208054839290610908908490610d2c565b909155505050565b60045473ffffffffffffffffffffffffffffffffffffffff163314610991576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f426f6e64656453747261746567793a2041636365737320496e76616c6964000060448201526064016102b6565b8015610a3e57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109ff57600080fd5b505afa158015610a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a379190610c53565b6003555050565b50600355565b6002546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810183905273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd90606401602060405180830381600087803b158015610abc57600080fd5b505af1158015610ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af49190610c1d565b610b80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f426f6e64656453747261746567793a204e6f7420656e6f75676820616c6c6f7760448201527f616e636520746f206d6f7665207769746820676976656e20616d6f756e74000060648201526084016102b6565b3360009081526005602052604081208054839290610908908490610c9c565b803573ffffffffffffffffffffffffffffffffffffffff81168114610bc357600080fd5b919050565b600060208284031215610bda57600080fd5b610be382610b9f565b9392505050565b60008060408385031215610bfd57600080fd5b610c0683610b9f565b9150610c1460208401610b9f565b90509250929050565b600060208284031215610c2f57600080fd5b8151610be381610d72565b600060208284031215610c4c57600080fd5b5035919050565b600060208284031215610c6557600080fd5b5051919050565b60008060408385031215610c7f57600080fd5b823591506020830135610c9181610d72565b809150509250929050565b60008219821115610caf57610caf610d43565b500190565b600082610cea577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610d2757610d27610d43565b500290565b600082821015610d3e57610d3e610d43565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8015158114610d8057600080fd5b5056fea2646970667358221220bde40486b093b0047c5ef6166c00523044314a8f1260070e157813d5d64f042564736f6c63430008070033";

export class BondedStrategy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    stnd_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BondedStrategy> {
    return super.deploy(stnd_, overrides || {}) as Promise<BondedStrategy>;
  }
  getDeployTransaction(
    stnd_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(stnd_, overrides || {});
  }
  attach(address: string): BondedStrategy {
    return super.attach(address) as BondedStrategy;
  }
  connect(signer: Signer): BondedStrategy__factory {
    return super.connect(signer) as BondedStrategy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BondedStrategyInterface {
    return new utils.Interface(_abi) as BondedStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BondedStrategy {
    return new Contract(address, _abi, signerOrProvider) as BondedStrategy;
  }
}
