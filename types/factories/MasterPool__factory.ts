/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MasterPool, MasterPoolInterface } from "../MasterPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_sushi",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Harvest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "LogInit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IRewarder",
        name: "rewarder",
        type: "address",
      },
    ],
    name: "LogPoolAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "contract IRewarder",
        name: "rewarder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "overwrite",
        type: "bool",
      },
    ],
    name: "LogSetPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "lastRewardBlock",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accSushiPerShare",
        type: "uint256",
      },
    ],
    name: "LogUpdatePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "SUSHI",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "contract IRewarder",
        name: "_rewarder",
        type: "address",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "calls",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "revertOnFail",
        type: "bool",
      },
    ],
    name: "batch",
    outputs: [
      {
        internalType: "bool[]",
        name: "successes",
        type: "bool[]",
      },
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lpToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "pids",
        type: "uint256[]",
      },
    ],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrator",
    outputs: [
      {
        internalType: "contract IMigratorChef",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingSushi",
    outputs: [
      {
        internalType: "uint256",
        name: "pending",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "uint128",
        name: "accSushiPerShare",
        type: "uint128",
      },
      {
        internalType: "uint64",
        name: "lastRewardBlock",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "allocPoint",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "pools",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewarder",
    outputs: [
      {
        internalType: "contract IRewarder",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "contract IRewarder",
        name: "_rewarder",
        type: "address",
      },
      {
        internalType: "bool",
        name: "overwrite",
        type: "bool",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMigratorChef",
        name: "_migrator",
        type: "address",
      },
    ],
    name: "setMigrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sushiPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "accSushiPerShare",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "lastRewardBlock",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "allocPoint",
            type: "uint64",
          },
        ],
        internalType: "struct MasterPool.PoolInfo",
        name: "pool",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "rewardDebt",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAndHarvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620030de380380620030de833981016040819052620000349162000089565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360601b6001600160601b031916608052620000b9565b6000602082840312156200009b578081fd5b81516001600160a01b0381168114620000b2578182fd5b9392505050565b60805160601c612ffd620000e16000398061091152806119655280611cdc5250612ffd6000f3fe6080604052600436106101b75760003560e01c80637c516e94116100ec578063ab7de0981161008a578063d1abb90711610064578063d1abb907146104be578063d2423b51146104de578063e1c7392a146104ff578063e30c397814610514576101b7565b8063ab7de09814610469578063b0bcf42a14610489578063c346253d1461049e576101b7565b80638da5cb5b116100c65780638da5cb5b146103f15780638dbdbe6d1461040657806393f1a40b14610426578063ab560e1014610454576101b7565b80637c516e941461039c5780637cd07e47146103bc57806388bba42f146103d1576101b7565b806323cf3118116101595780634e71e0c8116101335780634e71e0c81461030d57806351eb05a61461032257806357a5b58c1461034f57806378ed5d1f1461036f576101b7565b806323cf3118146102ad5780632f940c70146102cd578063454b0608146102ed576101b7565b80631526fe27116101955780631526fe271461022957806317caf6f11461025857806318fccc761461026d578063195426ec1461028d576101b7565b8063078dfbe7146101bc578063081e3eda146101de5780630ad58d2f14610209575b600080fd5b3480156101c857600080fd5b506101dc6101d7366004612544565b610529565b005b3480156101ea57600080fd5b506101f3610648565b6040516102009190612e88565b60405180910390f35b34801561021557600080fd5b506101dc610224366004612841565b61064e565b34801561023557600080fd5b506102496102443660046127ac565b610800565b60405161020093929190612e54565b34801561026457600080fd5b506101f361086e565b34801561027957600080fd5b506101dc6102883660046127dc565b610874565b34801561029957600080fd5b506101f36102a83660046127dc565b610a30565b3480156102b957600080fd5b506101dc6102c83660046126d7565b610c75565b3480156102d957600080fd5b506101dc6102e83660046127dc565b610cd9565b3480156102f957600080fd5b506101dc6103083660046127ac565b610e13565b34801561031957600080fd5b506101dc611123565b34801561032e57600080fd5b5061034261033d3660046127ac565b6111c8565b6040516102009190612e11565b34801561035b57600080fd5b506101dc61036a3660046125d8565b611505565b34801561037b57600080fd5b5061038f61038a3660046127ac565b61153b565b604051610200919061292d565b3480156103a857600080fd5b506101dc6103b7366004612650565b611562565b3480156103c857600080fd5b5061038f6115ef565b3480156103dd57600080fd5b506101dc6103ec36600461286e565b6115fe565b3480156103fd57600080fd5b5061038f611783565b34801561041257600080fd5b506101dc610421366004612841565b611792565b34801561043257600080fd5b506104466104413660046127dc565b61193f565b604051610200929190612ed0565b34801561046057600080fd5b5061038f611963565b34801561047557600080fd5b506101dc61048436600461280b565b611987565b34801561049557600080fd5b506101f3611be2565b3480156104aa57600080fd5b5061038f6104b93660046127ac565b611bef565b3480156104ca57600080fd5b506101dc6104d9366004612841565b611bfc565b6104f16104ec36600461258e565b611e5a565b6040516102009291906129bf565b34801561050b57600080fd5b506101dc611fec565b34801561052057600080fd5b5061038f612017565b6000546001600160a01b0316331461055c5760405162461bcd60e51b815260040161055390612c70565b60405180910390fd5b811561060f576001600160a01b0383161515806105765750805b6105925760405162461bcd60e51b815260040161055390612b6e565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385167fffffffffffffffffffffffff000000000000000000000000000000000000000091821617909155600180549091169055610643565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0385161790555b505050565b60035490565b6106566124db565b61065f846111c8565b600085815260066020908152604080832033845290915290208151919250906106ba9064e8d4a51000906106a69087906fffffffffffffffffffffffffffffffff16612026565b816106ad57fe5b6001840154919004612063565b600182015580546106cb90856120b0565b81556005805460009190879081106106df57fe5b6000918252602090912001546001600160a01b03169050801561077e5781546040517f8bf637420000000000000000000000000000000000000000000000000000000081526001600160a01b03831691638bf637429161074b918a9133918a9160009190600401612e91565b600060405180830381600087803b15801561076557600080fd5b505af1158015610779573d6000803e3d6000fd5b505050505b6107ac84866004898154811061079057fe5b6000918252602090912001546001600160a01b031691906120d3565b836001600160a01b031686336001600160a01b03167f8166bf25f8a2b7ed3c85049207da4358d16edbed977d23fa2ee6f0dde3ec2132886040516107f09190612e88565b60405180910390a4505050505050565b6003818154811061080d57fe5b6000918252602090912001546fffffffffffffffffffffffffffffffff8116915067ffffffffffffffff7001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041683565b60075481565b61087c6124db565b610885836111c8565b6000848152600660209081526040808320338452909152812082518154939450909264e8d4a51000916108ca91906fffffffffffffffffffffffffffffffff16612026565b816108d157fe5b04905060006108f56108f084600101548461206390919063ffffffff16565b612214565b6001840183905590508015610938576109386001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001686836120d3565b60006005878154811061094757fe5b6000918252602090912001546001600160a01b0316905080156109e55783546040517f8bf637420000000000000000000000000000000000000000000000000000000081526001600160a01b03831691638bf63742916109b2918b9133918c91899190600401612e91565b600060405180830381600087803b1580156109cc57600080fd5b505af11580156109e0573d6000803e3d6000fd5b505050505b86336001600160a01b03167f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae066092495484604051610a1f9190612e88565b60405180910390a350505050505050565b6000610a3a6124db565b60038481548110610a4757fe5b600091825260208083206040805160608101825291909301546fffffffffffffffffffffffffffffffff808216835267ffffffffffffffff7001000000000000000000000000000000008304811684860152780100000000000000000000000000000000000000000000000090920490911682850152888552600683528385206001600160a01b0389168652909252918320825160048054949650919492169288908110610af157fe5b6000918252602090912001546040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906370a0823190610b4390309060040161292d565b60206040518083038186803b158015610b5b57600080fd5b505afa158015610b6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9391906127c4565b9050836020015167ffffffffffffffff1643118015610bb157508015155b15610c3c576000610bd9856020015167ffffffffffffffff16436120b090919063ffffffff16565b90506000600754610c0a876040015167ffffffffffffffff16610c04610bfd611be2565b8690612026565b90612026565b81610c1157fe5b049050610c3783610c278364e8d4a51000612026565b81610c2e57fe5b8691900461223a565b935050505b60018301548354610c6a916108f09164e8d4a5100090610c5c9087612026565b81610c6357fe5b0490612063565b979650505050505050565b6000546001600160a01b03163314610c9f5760405162461bcd60e51b815260040161055390612c70565b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60008281526006602090815260408083203384529091528120805482825560018201839055600580549293919286908110610d1057fe5b6000918252602090912001546001600160a01b031690508015610dae576040517f8bf637420000000000000000000000000000000000000000000000000000000081526001600160a01b03821690638bf6374290610d7b908890339089906000908190600401612e91565b600060405180830381600087803b158015610d9557600080fd5b505af1158015610da9573d6000803e3d6000fd5b505050505b610dc084836004888154811061079057fe5b836001600160a01b031685336001600160a01b03167f2cac5e20e1541d836381527a43f651851e302817b71dc8e810284e69210c1c6b85604051610e049190612e88565b60405180910390a45050505050565b6002546001600160a01b0316610e3b5760405162461bcd60e51b815260040161055390612d11565b600060048281548110610e4a57fe5b60009182526020822001546040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03909116925082906370a0823190610e9e90309060040161292d565b60206040518083038186803b158015610eb657600080fd5b505afa158015610eca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eee91906127c4565b6002546040517f095ea7b30000000000000000000000000000000000000000000000000000000081529192506001600160a01b038085169263095ea7b392610f3c92169085906004016129a6565b602060405180830381600087803b158015610f5657600080fd5b505af1158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e9190612618565b506002546040517fce5494bb0000000000000000000000000000000000000000000000000000000081526000916001600160a01b03169063ce5494bb90610fd990869060040161292d565b602060405180830381600087803b158015610ff357600080fd5b505af1158015611007573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102b9190612634565b6040517f70a082310000000000000000000000000000000000000000000000000000000081529091506001600160a01b038216906370a082319061107390309060040161292d565b60206040518083038186803b15801561108b57600080fd5b505afa15801561109f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c391906127c4565b82146110e15760405162461bcd60e51b815260040161055390612ba5565b80600485815481106110ef57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555050505050565b6001546001600160a01b031633811461114e5760405162461bcd60e51b815260040161055390612ca5565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055600180549091169055565b6111d06124db565b600382815481106111dd57fe5b60009182526020918290206040805160608101825292909101546fffffffffffffffffffffffffffffffff8116835267ffffffffffffffff700100000000000000000000000000000000820481169484018590527801000000000000000000000000000000000000000000000000909104169082015291504311156115005760006004838154811061126b57fe5b6000918252602090912001546040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906370a08231906112bd90309060040161292d565b60206040518083038186803b1580156112d557600080fd5b505afa1580156112e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130d91906127c4565b905080156113ba576000611338836020015167ffffffffffffffff16436120b090919063ffffffff16565b9050600060075461135c856040015167ffffffffffffffff16610c04610bfd611be2565b8161136357fe5b0490506113a36113898461137c8464e8d4a51000612026565b8161138357fe5b0461225d565b85516fffffffffffffffffffffffffffffffff169061228f565b6fffffffffffffffffffffffffffffffff16845250505b6113c3436122c7565b67ffffffffffffffff16602083015260038054839190859081106113e357fe5b6000918252602091829020835191018054848401516040958601517fffffffffffffffffffffffffffffffff000000000000000000000000000000009092166fffffffffffffffffffffffffffffffff909416939093177fffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff1670010000000000000000000000000000000067ffffffffffffffff948516021777ffffffffffffffffffffffffffffffffffffffffffffffff16780100000000000000000000000000000000000000000000000093909116929092029190911790558301518351915185927f0fc9545022a542541ad085d091fb09a2ab36fee366a4576ab63714ea907ad353926114f69290918691612ede565b60405180910390a2505b919050565b8060005b818110156115355761152c84848381811061152057fe5b905060200201356111c8565b50600101611509565b50505050565b6004818154811061154857fe5b6000918252602090912001546001600160a01b0316905081565b6040517fd505accf0000000000000000000000000000000000000000000000000000000081526001600160a01b0389169063d505accf906115b3908a908a908a908a908a908a908a90600401612965565b600060405180830381600087803b1580156115cd57600080fd5b505af11580156115e1573d6000803e3d6000fd5b505050505050505050505050565b6002546001600160a01b031681565b6000546001600160a01b031633146116285760405162461bcd60e51b815260040161055390612c70565b61167d836116776003878154811061163c57fe5b600091825260209091200154600754907801000000000000000000000000000000000000000000000000900467ffffffffffffffff166120b0565b9061223a565b600755611689836122c7565b6003858154811061169657fe5b9060005260206000200160000160186101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550801561170c5781600585815481106116dd57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b80611738576005848154811061171e57fe5b6000918252602090912001546001600160a01b031661173a565b815b6001600160a01b0316847f95895a6ab1df54420d241b55243258a33e61b2194db66c1179ec521aae8e18658584604051611775929190612ec0565b60405180910390a350505050565b6000546001600160a01b031681565b61179a6124db565b6117a3846111c8565b60008581526006602090815260408083206001600160a01b038716845290915290208054919250906117d5908561223a565b815581516118159064e8d4a51000906118019087906fffffffffffffffffffffffffffffffff16612026565b8161180857fe5b60018401549190046122f1565b816001018190555060006005868154811061182c57fe5b6000918252602090912001546001600160a01b0316905080156118cb5781546040517f8bf637420000000000000000000000000000000000000000000000000000000081526001600160a01b03831691638bf6374291611898918a918991829160009190600401612e91565b600060405180830381600087803b1580156118b257600080fd5b505af11580156118c6573d6000803e3d6000fd5b505050505b6118fb33308760048a815481106118de57fe5b6000918252602090912001546001600160a01b0316929190612337565b836001600160a01b031686336001600160a01b03167f02d7e648dd130fc184d383e55bb126ac4c9c60e8f94bf05acdf557ba2d540b47886040516107f09190612e88565b60066020908152600092835260408084209091529082529020805460019091015482565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146119b15760405162461bcd60e51b815260040161055390612c70565b60075443906119c0908561223a565b6007556004805460018181019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b038087167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790925560058054938401815560009081527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0909301805492861692909116919091179055604080516060810190915290815260039060208101611a85846122c7565b67ffffffffffffffff168152602001611a9d876122c7565b67ffffffffffffffff908116909152825460018181018555600094855260209485902084519201805495850151604090950151841678010000000000000000000000000000000000000000000000000277ffffffffffffffffffffffffffffffffffffffffffffffff95909416700100000000000000000000000000000000027fffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff9094167fffffffffffffffffffffffffffffffff00000000000000000000000000000000909716969096179290921694909417929092161790556004546001600160a01b038085169290861691611ba5916120b0565b7f81ee0f8c5c46e2cb41984886f77a84181724abb86c32a5f6de539b07509d45e587604051611bd49190612e88565b60405180910390a450505050565b68056bc75e2d6310000090565b6005818154811061154857fe5b611c046124db565b611c0d846111c8565b6000858152600660209081526040808320338452909152812082518154939450909264e8d4a5100091611c5291906fffffffffffffffffffffffffffffffff16612026565b81611c5957fe5b0490506000611c786108f084600101548461206390919063ffffffff16565b9050611cbc64e8d4a51000611cac86600001516fffffffffffffffffffffffffffffffff168961202690919063ffffffff16565b81611cb357fe5b84919004612063565b60018401558254611ccd90876120b0565b8355611d036001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001686836120d3565b600060058881548110611d1257fe5b6000918252602090912001546001600160a01b031690508015611db05783546040517f8bf637420000000000000000000000000000000000000000000000000000000081526001600160a01b03831691638bf6374291611d7d918c9133918c91899190600401612e91565b600060405180830381600087803b158015611d9757600080fd5b505af1158015611dab573d6000803e3d6000fd5b505050505b611dc2868860048b8154811061079057fe5b856001600160a01b031688336001600160a01b03167f8166bf25f8a2b7ed3c85049207da4358d16edbed977d23fa2ee6f0dde3ec21328a604051611e069190612e88565b60405180910390a487336001600160a01b03167f71bab65ced2e5750775a0613be067df48ef06cf92a496ebf7663ae066092495484604051611e489190612e88565b60405180910390a35050505050505050565b6060808367ffffffffffffffff81118015611e7457600080fd5b50604051908082528060200260200182016040528015611e9e578160200160208202803683370190505b5091508367ffffffffffffffff81118015611eb857600080fd5b50604051908082528060200260200182016040528015611eec57816020015b6060815260200190600190039081611ed75790505b50905060005b84811015611fe3576000606030888885818110611f0b57fe5b9050602002810190611f1d9190612f12565b604051611f2b929190612901565b600060405180830381855af49150503d8060008114611f66576040519150601f19603f3d011682016040523d82523d6000602084013e611f6b565b606091505b50915091508180611f7a575085155b611f838261247b565b90611fa15760405162461bcd60e51b81526004016105539190612a59565b5081858481518110611faf57fe5b60200260200101901515908115158152505080848481518110611fce57fe5b60209081029190910101525050600101611ef2565b50935093915050565b6040517f98a9bd3b7a617581fc53b1e2992534e0e0cb5091c9d44aa1a7fc978f706caa8390600090a1565b6001546001600160a01b031681565b60008115806120415750508082028282828161203e57fe5b04145b61205d5760405162461bcd60e51b815260040161055390612dda565b92915050565b60008183038183128015906120785750838113155b8061208d575060008312801561208d57508381135b6120a95760405162461bcd60e51b815260040161055390612d48565b9392505050565b8082038281111561205d5760405162461bcd60e51b815260040161055390612a6c565b60006060846001600160a01b031663a9059cbb60e01b85856040516024016120fc9291906129a6565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516121859190612911565b6000604051808303816000865af19150503d80600081146121c2576040519150601f19603f3d011682016040523d82523d6000602084013e6121c7565b606091505b50915091508180156121f15750805115806121f15750808060200190518101906121f19190612618565b61220d5760405162461bcd60e51b815260040161055390612ada565b5050505050565b6000808212156122365760405162461bcd60e51b815260040161055390612aa3565b5090565b8181018181101561205d5760405162461bcd60e51b815260040161055390612c39565b60006fffffffffffffffffffffffffffffffff8211156122365760405162461bcd60e51b815260040161055390612c02565b8181016fffffffffffffffffffffffffffffffff808316908216101561205d5760405162461bcd60e51b815260040161055390612c39565b600067ffffffffffffffff8211156122365760405162461bcd60e51b815260040161055390612cda565b60008282018183128015906123065750838112155b8061231b575060008312801561231b57508381125b6120a95760405162461bcd60e51b815260040161055390612b11565b60006060856001600160a01b03166323b872dd60e01b86868660405160240161236293929190612941565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516123eb9190612911565b6000604051808303816000865af19150503d8060008114612428576040519150601f19603f3d011682016040523d82523d6000602084013e61242d565b606091505b50915091508180156124575750805115806124575750808060200190518101906124579190612618565b6124735760405162461bcd60e51b815260040161055390612da5565b505050505050565b60606044825110156124c1575060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c790000006020820152611500565b6004820191508180602001905181019061205d91906126f3565b604080516060810182526000808252602082018190529181019190915290565b60008083601f84011261250c578182fd5b50813567ffffffffffffffff811115612523578182fd5b602083019150836020808302850101111561253d57600080fd5b9250929050565b600080600060608486031215612558578283fd5b833561256381612fa1565b9250602084013561257381612fb9565b9150604084013561258381612fb9565b809150509250925092565b6000806000604084860312156125a2578283fd5b833567ffffffffffffffff8111156125b8578384fd5b6125c4868287016124fb565b909450925050602084013561258381612fb9565b600080602083850312156125ea578182fd5b823567ffffffffffffffff811115612600578283fd5b61260c858286016124fb565b90969095509350505050565b600060208284031215612629578081fd5b81516120a981612fb9565b600060208284031215612645578081fd5b81516120a981612fa1565b600080600080600080600080610100898b03121561266c578384fd5b883561267781612fa1565b9750602089013561268781612fa1565b9650604089013561269781612fa1565b9550606089013594506080890135935060a089013560ff811681146126ba578384fd5b979a969950949793969295929450505060c08201359160e0013590565b6000602082840312156126e8578081fd5b81356120a981612fa1565b600060208284031215612704578081fd5b815167ffffffffffffffff8082111561271b578283fd5b818401915084601f83011261272e578283fd5b81518181111561273c578384fd5b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116820101818110848211171561277a578586fd5b604052818152838201602001871015612791578485fd5b6127a2826020830160208701612f75565b9695505050505050565b6000602082840312156127bd578081fd5b5035919050565b6000602082840312156127d5578081fd5b5051919050565b600080604083850312156127ee578182fd5b82359150602083013561280081612fa1565b809150509250929050565b60008060006060848603121561281f578081fd5b83359250602084013561283181612fa1565b9150604084013561258381612fa1565b600080600060608486031215612855578081fd5b8335925060208401359150604084013561258381612fa1565b60008060008060808587031215612883578182fd5b8435935060208501359250604085013561289c81612fa1565b915060608501356128ac81612fb9565b939692955090935050565b600081518084526128cf816020860160208601612f75565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000828483379101908152919050565b60008251612923818460208701612f75565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6001600160a01b03929092168252602082015260400190565b604080825283519082018190526000906020906060840190828701845b828110156129fa5781511515845292840192908401906001016129dc565b50505083810382850152808551612a118184612e88565b91508192508381028201848801865b83811015612a4a578583038552612a388383516128b7565b94870194925090860190600101612a20565b50909998505050505050505050565b6000602082526120a960208301846128b7565b60208082526015908201527f426f72696e674d6174683a20556e646572666c6f770000000000000000000000604082015260600190565b6020808252600b908201527f496e7465676572203c2030000000000000000000000000000000000000000000604082015260600190565b6020808252601c908201527f426f72696e6745524332303a205472616e73666572206661696c656400000000604082015260600190565b60208082526021908201527f5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f60408201527f7700000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526015908201527f4f776e61626c653a207a65726f20616464726573730000000000000000000000604082015260600190565b60208082526029908201527f4d61737465724368656656323a206d696772617465642062616c616e6365206d60408201527f757374206d617463680000000000000000000000000000000000000000000000606082015260800190565b6020808252601c908201527f426f72696e674d6174683a2075696e74313238204f766572666c6f7700000000604082015260600190565b60208082526018908201527f426f72696e674d6174683a20416464204f766572666c6f770000000000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604082015260600190565b6020808252601b908201527f426f72696e674d6174683a2075696e743634204f766572666c6f770000000000604082015260600190565b6020808252601d908201527f4d61737465724368656656323a206e6f206d69677261746f7220736574000000604082015260600190565b60208082526024908201527f5369676e6564536166654d6174683a207375627472616374696f6e206f76657260408201527f666c6f7700000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f426f72696e6745524332303a205472616e7366657246726f6d206661696c6564604082015260600190565b60208082526018908201527f426f72696e674d6174683a204d756c204f766572666c6f770000000000000000604082015260600190565b81516fffffffffffffffffffffffffffffffff16815260208083015167ffffffffffffffff90811691830191909152604092830151169181019190915260600190565b6fffffffffffffffffffffffffffffffff93909316835267ffffffffffffffff918216602084015216604082015260600190565b90815260200190565b9485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b9182521515602082015260400190565b918252602082015260400190565b67ffffffffffffffff93909316835260208301919091526fffffffffffffffffffffffffffffffff16604082015260600190565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612f46578283fd5b83018035915067ffffffffffffffff821115612f60578283fd5b60200191503681900382131561253d57600080fd5b60005b83811015612f90578181015183820152602001612f78565b838111156115355750506000910152565b6001600160a01b0381168114612fb657600080fd5b50565b8015158114612fb657600080fdfea2646970667358221220dff054006c33510b4e680e2c25bc561fd32c2d66abb7776e455439df65308c1b64736f6c634300060c0033";

export class MasterPool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _sushi: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterPool> {
    return super.deploy(_sushi, overrides || {}) as Promise<MasterPool>;
  }
  getDeployTransaction(
    _sushi: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_sushi, overrides || {});
  }
  attach(address: string): MasterPool {
    return super.attach(address) as MasterPool;
  }
  connect(signer: Signer): MasterPool__factory {
    return super.connect(signer) as MasterPool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterPoolInterface {
    return new utils.Interface(_abi) as MasterPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterPool {
    return new Contract(address, _abi, signerOrProvider) as MasterPool;
  }
}
