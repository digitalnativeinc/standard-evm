/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EIP712, EIP712Interface } from "../EIP712";

const _abi = [
  {
    inputs: [],
    name: "EIP712_DOMAIN_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xa8026612",
        type: "bytes32",
      },
    ],
    name: "c_0xa8026612",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60e9610025600b82828239805160001a60731461001857fe5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c8063053e94ff146042578063c7977be714606d575b600080fd5b606b60048036036020811015605657600080fd5b81019080803590602001909291905050506089565b005b6073608c565b6040518082815260200191505060405180910390f35b50565b7f36c25de3e541d5d970f66e4210d728721220fff5c077cc6cd008b3a0c62adab760001b8156fea26469706673582212205c18aa5627d15b85290ee68f3d0b3bbc4d6dfe8df812fcc4be866526a8bed2f364736f6c634300060c0033";

export class EIP712__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EIP712> {
    return super.deploy(overrides || {}) as Promise<EIP712>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EIP712 {
    return super.attach(address) as EIP712;
  }
  connect(signer: Signer): EIP712__factory {
    return super.connect(signer) as EIP712__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EIP712Interface {
    return new utils.Interface(_abi) as EIP712Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): EIP712 {
    return new Contract(address, _abi, signerOrProvider) as EIP712;
  }
}
