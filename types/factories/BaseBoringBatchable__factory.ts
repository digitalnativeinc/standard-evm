/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BaseBoringBatchable,
  BaseBoringBatchableInterface,
} from "../BaseBoringBatchable";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "calls",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "revertOnFail",
        type: "bool",
      },
    ],
    name: "batch",
    outputs: [
      {
        internalType: "bool[]",
        name: "successes",
        type: "bool[]",
      },
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xd88b7fa5",
        type: "bytes32",
      },
    ],
    name: "c_0xd88b7fa5",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d1f806100206000396000f3fe6080604052600436106100295760003560e01c80636e1f21d31461002e578063d2423b5114610057575b600080fd5b34801561003a57600080fd5b506100556004803603810190610050919061086c565b610088565b005b610071600480360381019061006c9190610814565b61008b565b60405161007f929190610a94565b60405180910390f35b50565b6060806100ba7fad25bf35efce4bf8c24d7096c1b5e6e110884588d13ca146803b67dde747113060001b610088565b6100e67ff82425dfa1c5d7e02e3a7aca34fdedd303b4647b996411030393cc80a906163660001b610088565b6101127f5f5a37198e87f4de0d8f97a2a75941e42d0fe4ce357725ca7df319e7a01f89f360001b610088565b8484905067ffffffffffffffff8111801561012c57600080fd5b5060405190808252806020026020018201604052801561015b5781602001602082028036833780820191505090505b50915061018a7fef9eb991622d546e0bc09d64443011bac562fc72ae297c057d95625d18a2c07660001b610088565b6101b67f1c14509e9c8f7ed3852e50dbdba8b4e8f8812e0d9e940ae779f812816e38c4f060001b610088565b8484905067ffffffffffffffff811180156101d057600080fd5b5060405190808252806020026020018201604052801561020457816020015b60608152602001906001900390816101ef5790505b5090506102337f6bd16203bc8107b78af3de699cffc8eda1b0f11de187cb2585b1654204ef253f60001b610088565b61025f7f258e574e29f29556d1c7842979a342847380db26b0b9ea12e01c24d095ab737860001b610088565b60005b8585905081101561054c576102997fae52955aaa80be0852a9f4976d81317a2d948d46cb299dbabc7c7c154d3047c960001b610088565b6102c57f584717c0dd57238522d4e7d6f9fd27fb97f5981d7f9113772d156c785b514b4660001b610088565b600060603073ffffffffffffffffffffffffffffffffffffffff168888858181106102ec57fe5b90506020028101906102fe9190610aed565b60405161030c929190610a7b565b600060405180830381855af49150503d8060008114610347576040519150601f19603f3d011682016040523d82523d6000602084013e61034c565b606091505b509150915061037d7f88f920f458d259f6179f4c9caf208e57c9219ee1fb0a1d5afe0db5b88a9d058d60001b610088565b6103a97f473fdd32a0b2551b55ad07d309b967be33ae7c2917fd56984d0e3d73df71c64a60001b610088565b6103d57fe9bf0fe072647167fd7b0adcbc788297628dbfef7b78b8f6cb4fffee8193fde260001b610088565b81806103df575085155b6103e882610555565b90610429576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104209190610acb565b60405180910390fd5b506104567f65a0cddbe8db2b28266ffa121613690a9f2e68fb9c9b1658d71a70b096e4c18660001b610088565b6104827f07cc136ecdea435b98e315e9bc6fa5f6a7036f96bd133c2b571221f624326e3960001b610088565b6104ae7f3a692f12547edd81d3b7142b71f2d9da5654574a49c7e87d8dc2d5b33c0ae7d860001b610088565b818584815181106104bb57fe5b6020026020010190151590811515815250506104f97f7ed01ef7333b54193a9a47c60b4dd255d59fc394751ec539d250e515f838c75360001b610088565b6105257fa67458be77b03d388026ab748d50f8cc10c616e11a8d63a54760d2bba2ff65e660001b610088565b8084848151811061053257fe5b602002602001018190525050508080600101915050610262565b50935093915050565b60606105837f686955950498987476fe2bca2f26cf1cff6ee6ab8c474cc252f0ced0132f66ed60001b610088565b6105af7fcc326e1f01aa05d5fc126e6c90add337abd5220c04bb2e03a4e283d29788de9960001b610088565b6105db7f4c174b90bf105a162014d7c827c17facf531010eb060fb88be092182e139e9c760001b610088565b60448251101561067a576106117f9343cd43a624f49080e9c274c7df213b85eeaeab17a0928af36edbc17b06837060001b610088565b61063d7f1e3b5a9c38ad2b795682bf942a62baa6327eeed9faf573b12259deb773e9c62d60001b610088565b6040518060400160405280601d81526020017f5472616e73616374696f6e2072657665727465642073696c656e746c790000008152509050610747565b6106a67f8363084c0d862e542f96f0a8fe07ac8f3c5296e408cb18bd2b3a01c49494294560001b610088565b6106d27f932c647956446f699a942bc87b2d1ea4d7e6e5d3f415afe6bafb2668744df44960001b610088565b6004820191506107047fac1a8462dd7a52d824b84fe66df4b5abe6ca579acc949c763f151b2f3a80f38660001b610088565b6107307f877fce1adbf467efa1b73008b2eabd41141df531a8d7726eac1797c9a797301c60001b610088565b818060200190518101906107449190610895565b90505b919050565b60008083601f84011261075e57600080fd5b8235905067ffffffffffffffff81111561077757600080fd5b60208301915083602082028301111561078f57600080fd5b9250929050565b6000813590506107a581610cbb565b92915050565b6000813590506107ba81610cd2565b92915050565b600082601f8301126107d157600080fd5b81516107e46107df82610b71565b610b44565b9150808252602083016020830185838301111561080057600080fd5b61080b838284610c77565b50505092915050565b60008060006040848603121561082957600080fd5b600084013567ffffffffffffffff81111561084357600080fd5b61084f8682870161074c565b9350935050602061086286828701610796565b9150509250925092565b60006020828403121561087e57600080fd5b600061088c848285016107ab565b91505092915050565b6000602082840312156108a757600080fd5b600082015167ffffffffffffffff8111156108c157600080fd5b6108cd848285016107c0565b91505092915050565b60006108e283836109d5565b60208301905092915050565b60006108fa8383610a09565b905092915050565b600061090d82610bbd565b6109178185610c03565b935061092283610b9d565b8060005b8381101561095357815161093a88826108d6565b975061094583610be9565b925050600181019050610926565b5085935050505092915050565b600061096b82610bc8565b6109758185610c14565b93508360208202850161098785610bad565b8060005b858110156109c357848403895281516109a485826108ee565b94506109af83610bf6565b925060208a0199505060018101905061098b565b50829750879550505050505092915050565b6109de81610c52565b82525050565b60006109f08385610c36565b93506109fd838584610c68565b82840190509392505050565b6000610a1482610bd3565b610a1e8185610c25565b9350610a2e818560208601610c77565b610a3781610caa565b840191505092915050565b6000610a4d82610bde565b610a578185610c41565b9350610a67818560208601610c77565b610a7081610caa565b840191505092915050565b6000610a888284866109e4565b91508190509392505050565b60006040820190508181036000830152610aae8185610902565b90508181036020830152610ac28184610960565b90509392505050565b60006020820190508181036000830152610ae58184610a42565b905092915050565b60008083356001602003843603038112610b0657600080fd5b80840192508235915067ffffffffffffffff821115610b2457600080fd5b602083019250600182023603831315610b3c57600080fd5b509250929050565b6000604051905081810181811067ffffffffffffffff82111715610b6757600080fd5b8060405250919050565b600067ffffffffffffffff821115610b8857600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610c95578082015181840152602081019050610c7a565b83811115610ca4576000848401525b50505050565b6000601f19601f8301169050919050565b610cc481610c52565b8114610ccf57600080fd5b50565b610cdb81610c5e565b8114610ce657600080fd5b5056fea264697066735822122098e1cba3e18bef0a586eee4204c868a42943aa135fe7370c6a4f169cfb24b3cd64736f6c634300060c0033";

export class BaseBoringBatchable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BaseBoringBatchable> {
    return super.deploy(overrides || {}) as Promise<BaseBoringBatchable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BaseBoringBatchable {
    return super.attach(address) as BaseBoringBatchable;
  }
  connect(signer: Signer): BaseBoringBatchable__factory {
    return super.connect(signer) as BaseBoringBatchable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseBoringBatchableInterface {
    return new utils.Interface(_abi) as BaseBoringBatchableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseBoringBatchable {
    return new Contract(address, _abi, signerOrProvider) as BaseBoringBatchable;
  }
}
