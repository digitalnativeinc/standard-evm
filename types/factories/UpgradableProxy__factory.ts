/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UpgradableProxy,
  UpgradableProxyInterface,
} from "../UpgradableProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxyTo",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_new",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_old",
        type: "address",
      },
    ],
    name: "ProxyOwnerUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_new",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_old",
        type: "address",
      },
    ],
    name: "ProxyUpdated",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "IMPLEMENTATION_SLOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNER_SLOT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyType",
    outputs: [
      {
        internalType: "uint256",
        name: "proxyTypeId",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferProxyOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newProxyTo",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "updateAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newProxyTo",
        type: "address",
      },
    ],
    name: "updateImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108a13803806108a18339818101604052602081101561003357600080fd5b505161003e3361004d565b61004781610071565b50610095565b7f0f0d4781fe8ea21621f49819e2b0d607722e68c33c2475b7ee855a0654a469ec55565b7f6927e4b1773d25e0863355a4eee95ef7cbca4b8e46f7856b20e135c68862674155565b6107fd806100a46000396000f3fe60806040526004361061007f5760003560e01c80635c60da1b1161004e5780635c60da1b14610179578063963949a31461018e578063d88ca2c8146101a3578063f1739cae14610259576100ce565b8063025313a2146100d9578063025b22bc1461010a578063086fc0c71461013d5780634555d5c914610164576100ce565b366100ce576100cc61008f61028c565b6000368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102b192505050565b005b6100cc61008f61028c565b3480156100e557600080fd5b506100ee6102d9565b604080516001600160a01b039092168252519081900360200190f35b34801561011657600080fd5b506100cc6004803603602081101561012d57600080fd5b50356001600160a01b03166102e8565b34801561014957600080fd5b5061015261042a565b60408051918252519081900360200190f35b34801561017057600080fd5b5061015261044e565b34801561018557600080fd5b506100ee610453565b34801561019a57600080fd5b5061015261045d565b6100cc600480360360408110156101b957600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156101e457600080fd5b8201836020820111156101f657600080fd5b8035906020019184600183028401116401000000008311171561021857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610481945050505050565b34801561026557600080fd5b506100cc6004803603602081101561027c57600080fd5b50356001600160a01b0316610617565b7f6927e4b1773d25e0863355a4eee95ef7cbca4b8e46f7856b20e135c6886267415490565b600080825160208401856127105a03f43d604051816000823e8280156102d5578282f35b8282fd5b60006102e3610712565b905090565b336102f1610712565b6001600160a01b031614610338576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b6001600160a01b038116610393576040805162461bcd60e51b815260206004820152601560248201527f494e56414c49445f50524f58595f414444524553530000000000000000000000604482015290519081900360640190fd5b61039c81610737565b6103d75760405162461bcd60e51b81526004018080602001828103825260258152602001806107a36025913960400191505060405180910390fd5b6103df61028c565b6001600160a01b0316816001600160a01b03167fd32d24edea94f55e932d9a008afc425a8561462d1b1f57bc6e508e9a6b9509e160405160405180910390a36104278161075a565b50565b7f6927e4b1773d25e0863355a4eee95ef7cbca4b8e46f7856b20e135c68862674181565b600290565b60006102e361028c565b7f0f0d4781fe8ea21621f49819e2b0d607722e68c33c2475b7ee855a0654a469ec81565b3361048a610712565b6001600160a01b0316146104d1576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b6104da826102e8565b60006060306001600160a01b031634846040518082805190602001908083835b602083106105195780518252601f1990920191602091820191016104fa565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461057b576040519150601f19603f3d011682016040523d82523d6000602084013e610580565b606091505b50915091508181906106105760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156105d55781810151838201526020016105bd565b50505050905090810190601f1680156106025780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5050505050565b33610620610712565b6001600160a01b031614610667576040805162461bcd60e51b81526020600482015260096024820152682727aa2fa7aba722a960b91b604482015290519081900360640190fd5b6001600160a01b0381166106b1576040805162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015290519081900360640190fd5b7fdbe5fd65bcdbae152f24ab660ea68e72b4d4705b57b16e0caae994e214680ee2816106db610712565b60405180836001600160a01b03168152602001826001600160a01b031681526020019250505060405180910390a16104278161077e565b7f0f0d4781fe8ea21621f49819e2b0d607722e68c33c2475b7ee855a0654a469ec5490565b60006001600160a01b03821661074f57506000610755565b50803b15155b919050565b7f6927e4b1773d25e0863355a4eee95ef7cbca4b8e46f7856b20e135c68862674155565b7f0f0d4781fe8ea21621f49819e2b0d607722e68c33c2475b7ee855a0654a469ec5556fe44455354494e4154494f4e5f414444524553535f49535f4e4f545f415f434f4e5452414354a26469706673582212206d47d63eabdcd9a491b79012fbe58bb606e5dfe78872ab6257fd31c0f42f993d64736f6c634300060c0033";

export class UpgradableProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _proxyTo: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpgradableProxy> {
    return super.deploy(_proxyTo, overrides || {}) as Promise<UpgradableProxy>;
  }
  getDeployTransaction(
    _proxyTo: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_proxyTo, overrides || {});
  }
  attach(address: string): UpgradableProxy {
    return super.attach(address) as UpgradableProxy;
  }
  connect(signer: Signer): UpgradableProxy__factory {
    return super.connect(signer) as UpgradableProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradableProxyInterface {
    return new utils.Interface(_abi) as UpgradableProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradableProxy {
    return new Contract(address, _abi, signerOrProvider) as UpgradableProxy;
  }
}
