/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LPTokenWrapper,
  LPTokenWrapperInterface,
} from "../LPTokenWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lpt",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalInput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107e7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80639e15bc25116100505780639e15bc25146100ca578063a694fc3a146100d2578063ce5fc8d0146100e557600080fd5b80632e1a7d4d1461006c57806370a0823114610081575b600080fd5b61007f61007a3660046106a1565b61012a565b005b6100b761008f366004610649565b73ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205490565b6040519081526020015b60405180910390f35b6001546100b7565b61007f6100e03660046106a1565b61018f565b6000546101059073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100c1565b60015461013790826101f2565b6001553360009081526002602052604090205461015490826101f2565b33600081815260026020526040812092909255905461018c9173ffffffffffffffffffffffffffffffffffffffff9091169083610205565b50565b60015461019c90826102de565b600155336000908152600260205260409020546101b990826102de565b33600081815260026020526040812092909255905461018c9173ffffffffffffffffffffffffffffffffffffffff9091169030846102ea565b60006101fe828461073f565b9392505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526102d99084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261034e565b505050565b60006101fe8284610727565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526103489085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401610257565b50505050565b60006103b0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661045f9092919063ffffffff16565b8051909150156102d957808060200190518101906103ce919061067f565b6102d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b606061046e8484600085610476565b949350505050565b606082471015610508576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610456565b843b610570576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610456565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161059991906106ba565b60006040518083038185875af1925050503d80600081146105d6576040519150601f19603f3d011682016040523d82523d6000602084013e6105db565b606091505b50915091506105eb8282866105f6565b979650505050505050565b606083156106055750816101fe565b8251156106155782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045691906106d6565b60006020828403121561065b57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146101fe57600080fd5b60006020828403121561069157600080fd5b815180151581146101fe57600080fd5b6000602082840312156106b357600080fd5b5035919050565b600082516106cc818460208701610756565b9190910192915050565b60208152600082518060208401526106f5816040850160208701610756565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000821982111561073a5761073a610782565b500190565b60008282101561075157610751610782565b500390565b60005b83811015610771578181015183820152602001610759565b838111156103485750506000910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220bc1c4acaba21d9431436c5758acc161ce9d2497df7f3462706f5201b5810954864736f6c63430008070033";

export class LPTokenWrapper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LPTokenWrapper> {
    return super.deploy(overrides || {}) as Promise<LPTokenWrapper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LPTokenWrapper {
    return super.attach(address) as LPTokenWrapper;
  }
  connect(signer: Signer): LPTokenWrapper__factory {
    return super.connect(signer) as LPTokenWrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPTokenWrapperInterface {
    return new utils.Interface(_abi) as LPTokenWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LPTokenWrapper {
    return new Contract(address, _abi, signerOrProvider) as LPTokenWrapper;
  }
}
